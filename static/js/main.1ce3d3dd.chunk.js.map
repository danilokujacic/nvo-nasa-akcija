{"version":3,"sources":["redux/Theme.ts","utils/ThemeHook.ts","utils/useViewport.ts","shared/FluentButton.tsx","components/Header/DesktopNav.tsx","components/Header/MobileNav.tsx","components/Header.tsx","components/Home/WelcomePage.tsx","shared/ScrollDownButton.tsx","routes/HomePage.tsx","App.tsx","redux/Viewport.ts","redux/index.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","reducers","setTheme","state","payload","actions","useTheme","toggler","themeState","useSelector","theme","dispatch","useDispatch","console","log","$setTheme","useViewport","viewport","FluentButton","props","getTheme","CommandBarButton","styles","root","color","palette","themeDark","background","padding","boxSizing","borderBottom","label","fontSize","fontWeight","rootHovered","DesktopNav","style","height","alignItems","display","text","onClick","navigate","MobileNav","React","useState","isPanelOpen","setPanelOpen","IconButton","iconProps","iconName","selectors","themeDarker","backgroundColor","white","Panel","onDismiss","onOuterClick","onLightDismissClick","isLightDismiss","main","zIndex","black","headerText","content","contentInner","marginTop","overlay","opacity","position","isOpen","Nav","ariaLabel","onLinkClick","e","item","preventDefault","url","linkText","chevronIcon","link","isSelected","undefined","border","borderLeft","compositeLink","groups","links","expandAriaLabel","collapseAriaLabel","target","Header","className","justifyContent","marginLeft","title","disabled","WelcomePage","animation","transitions","useTransition","from","left","top","enter","secondtransitions","map","key","div","Text","userSelect","variant","ScrollDownButton","FontIcon","HomePage","backgroundImage","App","initializeIcons","loadTheme","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","width","path","window","innerWidth","getViewport","combineReducers","themeReducer","viewportReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ce3d3dd.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: 'light',\r\n    reducers: {\r\n        setTheme(state, { payload }) {\r\n            state = payload;\r\n            return state;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setTheme } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n","import { setTheme as $setTheme } from '../redux/Theme';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useTheme = (toggler?: any) => {\r\n    const themeState = useSelector((state: any) => state.theme);\r\n    const dispatch = useDispatch();\r\n    const setTheme = (theme?: string) => {\r\n        if (toggler) {\r\n            console.log(themeState);\r\n            if (themeState === 'dark') {\r\n                dispatch($setTheme('light'));\r\n            } else {\r\n                dispatch($setTheme('dark'));\r\n            }\r\n            return;\r\n        }\r\n        dispatch($setTheme(theme));\r\n    };\r\n\r\n    return { setTheme, themeState };\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport const useViewport = () => {\r\n    const vpState = useSelector((state: any) => state.viewport);\r\n    return vpState;\r\n};\r\n","import React from 'react';\r\n\r\nimport { CommandBarButton, getTheme, IButtonProps } from '@fluentui/react';\r\n\r\nconst FluentButton: React.FC<IButtonProps> = (props) => {\r\n    const theme = getTheme();\r\n\r\n    return (\r\n        <CommandBarButton\r\n            {...props}\r\n            styles={{\r\n                root: {\r\n                    color: theme.palette.themeDark,\r\n                    background: 'transparent',\r\n                    padding: '8px 16px',\r\n                    boxSizing: 'border-box',\r\n                    borderBottom: '2px solid transparent',\r\n                },\r\n                label: {\r\n                    fontSize: '16px',\r\n                    fontWeight: 600,\r\n                },\r\n                rootHovered: {\r\n                    color: theme.palette.themeDark,\r\n                    background: 'transparent',\r\n                    borderBottom: '2px solid ' + theme.palette.themeDark,\r\n                },\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default FluentButton;\r\n","import React from 'react';\r\nimport FluentButton from '../../shared/FluentButton';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst DesktopNav = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100%',\r\n\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n            }}>\r\n            <FluentButton text='Home' onClick={() => navigate('/')} />\r\n            <FluentButton text='About us' onClick={() => navigate('/about')} />\r\n            <FluentButton text='Contact' onClick={() => navigate('/contact')} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DesktopNav;\r\n","import {\r\n    getTheme,\r\n    IconButton,\r\n    Panel,\r\n    Nav,\r\n    INavLinkGroup,\r\n} from '@fluentui/react';\r\nimport { navigate } from '@reach/router';\r\nimport React from 'react';\r\nimport { useTheme } from '../../utils/ThemeHook';\r\n\r\nconst MobileNav = () => {\r\n    const [isPanelOpen, setPanelOpen] = React.useState(false);\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const navLinkGroups: INavLinkGroup[] = [\r\n        {\r\n            links: [\r\n                {\r\n                    name: 'Home',\r\n                    url: '/',\r\n                },\r\n                {\r\n                    name: 'About us',\r\n                    url: '/about',\r\n                    expandAriaLabel: 'Expand About us',\r\n                    collapseAriaLabel: 'Collapse About us',\r\n                    links: [\r\n                        {\r\n                            name: 'Child link 4',\r\n                            url: 'http://example.com',\r\n                            target: '_blank',\r\n                        },\r\n                    ],\r\n                },\r\n\r\n                {\r\n                    name: 'Contact',\r\n                    url: '/contact',\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100%',\r\n\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n            }}>\r\n            <IconButton\r\n                iconProps={{\r\n                    iconName: 'GlobalNavButton',\r\n                    style: { fontSize: 20, color: theme.palette.themeDark },\r\n                }}\r\n                onClick={() => setPanelOpen(true)}\r\n                styles={{\r\n                    root: {\r\n                        selectors: {\r\n                            ':hover .ms-Button-icon': {\r\n                                color: `${theme.palette.themeDarker} !important`,\r\n                            },\r\n                        },\r\n                    },\r\n                    rootHovered: {\r\n                        backgroundColor: theme.palette.white,\r\n                    },\r\n                }}\r\n            />\r\n            <Panel\r\n                onDismiss={() => setPanelOpen(false)}\r\n                onOuterClick={() => setPanelOpen(false)}\r\n                onLightDismissClick={() => setPanelOpen(false)}\r\n                isLightDismiss={true}\r\n                styles={{\r\n                    main: {\r\n                        zIndex: 999,\r\n                        background: theme.palette.black,\r\n                    },\r\n                    headerText: {\r\n                        color: theme.palette.themeDark,\r\n                    },\r\n                    content: {\r\n                        color: theme.palette.themeDark,\r\n                    },\r\n                    contentInner: {\r\n                        marginTop: '24px',\r\n                    },\r\n                    overlay: {\r\n                        background: theme.palette.black,\r\n                        opacity: 0.6,\r\n                        zIndex: 5,\r\n                        position: 'absolute',\r\n                    },\r\n                }}\r\n                headerText='Navigation'\r\n                isOpen={isPanelOpen}>\r\n                <Nav\r\n                    ariaLabel='Navigation'\r\n                    onLinkClick={(e: any, item: any) => {\r\n                        e.preventDefault();\r\n                        navigate(item.url);\r\n                        setPanelOpen(false);\r\n                    }}\r\n                    styles={(props: any) => ({\r\n                        linkText: { zIndex: 1, color: theme.palette.themeDark },\r\n\r\n                        chevronIcon: {\r\n                            zIndex: 1,\r\n                            color: theme.palette.themeDark,\r\n                        },\r\n                        link: {\r\n                            background:\r\n                                themeState === 'dark' && props.isSelected\r\n                                    ? theme.palette.black\r\n                                    : undefined,\r\n                            border: 'none',\r\n                            ':after': {\r\n                                borderLeft:\r\n                                    '2px solid ' + theme.palette.themeDark,\r\n                            },\r\n                        },\r\n                        compositeLink: {\r\n                            border: 'none',\r\n                            ':hover .ms-Nav-linkText': {\r\n                                color: theme.palette.themeDarker,\r\n                            },\r\n                            ':hover .ms-Nav-chevron': {\r\n                                zIndex: 1,\r\n                                color:\r\n                                    theme.palette.themeDarker + ' !important',\r\n                            },\r\n                        },\r\n                    })}\r\n                    groups={navLinkGroups}\r\n                />\r\n            </Panel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileNav;\r\n","import { getTheme, IconButton } from '@fluentui/react';\r\nimport React from 'react';\r\nimport { useTheme } from '../utils/ThemeHook';\r\nimport { useViewport } from '../utils/useViewport';\r\nimport DesktopNav from './Header/DesktopNav';\r\nimport MobileNav from './Header/MobileNav';\r\n\r\nconst Header: React.FC<any> = () => {\r\n    const theme = getTheme();\r\n    const { setTheme, themeState } = useTheme(true);\r\n    const viewport = useViewport();\r\n\r\n    return (\r\n        <div\r\n            className='header'\r\n            style={{\r\n                height: '52px',\r\n                padding: '0px 24px',\r\n                background: theme.palette.black,\r\n                borderBottom: `1px solid ${theme.palette.themeDark}`,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n            }}>\r\n            {viewport === 'desktop' ? <DesktopNav /> : <MobileNav />}\r\n            <div\r\n                style={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <IconButton\r\n                    iconProps={{\r\n                        iconName:\r\n                            themeState === 'light' ? 'ClearNight' : 'Sunny',\r\n                        style: {\r\n                            color: theme.palette.themeDark,\r\n                            fontSize: '20px',\r\n                            marginTop:\r\n                                themeState === 'dark' ? '2px' : undefined,\r\n                            marginLeft:\r\n                                themeState === 'dark' ? '6px' : undefined,\r\n                        },\r\n                    }}\r\n                    styles={{\r\n                        root: {\r\n                            selectors: {\r\n                                ':hover .ms-Button-icon': {\r\n                                    color: `${theme.palette.themeDarker} !important`,\r\n                                },\r\n                            },\r\n                        },\r\n                        rootHovered: {\r\n                            backgroundColor: theme.palette.white,\r\n                        },\r\n                    }}\r\n                    title='ClearNight'\r\n                    onClick={() => setTheme()}\r\n                    ariaLabel='ClearNight'\r\n                    disabled={false}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { getTheme, Text } from '@fluentui/react';\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { useTheme } from '../../utils/ThemeHook';\r\nimport { useViewport } from '../../utils/useViewport';\r\n\r\nconst WelcomePage: React.FC<{}> = () => {\r\n    const [animation] = React.useState(true);\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const viewport = useViewport();\r\n\r\n    const transitions = useTransition(animation, null, {\r\n        from: {\r\n            position: 'absolute',\r\n            left: '10%',\r\n            opacity: 0,\r\n            top: viewport === 'desktop' ? '30%' : '15%',\r\n        },\r\n        enter: {\r\n            left: viewport === 'desktop' ? '20%' : '30%',\r\n            top: viewport === 'desktop' ? '30%' : '15%',\r\n            opacity: 1,\r\n        },\r\n    });\r\n    const secondtransitions = useTransition(animation, null, {\r\n        from: {\r\n            position: 'absolute',\r\n            left: '60%',\r\n            opacity: 0,\r\n            top: viewport === 'desktop' ? '50%' : '30%',\r\n        },\r\n        enter: {\r\n            left: viewport === 'desktop' ? '50%' : '10%',\r\n            top: viewport === 'desktop' ? '50%' : '25%',\r\n            opacity: 1,\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            {transitions.map(\r\n                ({ item, props, key }) =>\r\n                    item && (\r\n                        <animated.div\r\n                            key={key}\r\n                            style={props}\r\n                            className='welcome-text'>\r\n                            <Text\r\n                                styles={{\r\n                                    root: {\r\n                                        color:\r\n                                            themeState === 'light'\r\n                                                ? theme.palette.black\r\n                                                : theme.palette.themeDark,\r\n                                        userSelect: 'none',\r\n                                    },\r\n                                }}\r\n                                variant={\r\n                                    viewport === 'desktop' ? 'mega' : 'xxLarge'\r\n                                }>\r\n                                NVO „Nasa akcija“\r\n                            </Text>\r\n                        </animated.div>\r\n                    ),\r\n            )}\r\n            {secondtransitions.map(\r\n                ({ item, props, key }) =>\r\n                    item && (\r\n                        <animated.div\r\n                            key={key}\r\n                            style={props}\r\n                            className='welcome-text-description'>\r\n                            <Text\r\n                                styles={{\r\n                                    root: {\r\n                                        color:\r\n                                            themeState === 'light'\r\n                                                ? theme.palette.black\r\n                                                : theme.palette.themeDark,\r\n                                        userSelect: 'none',\r\n                                    },\r\n                                }}\r\n                                variant='large'>\r\n                                Osnovana 2012 godine kao nevladino udruzenje\r\n                                ciji je opsti cilj razvoj svijesti gradjana kao\r\n                                i njihovo ukljucivanje u socijalni, ekonomski,\r\n                                ekoloski i kulturni razvoj drustva, kvaliteta\r\n                                zivota gradjana i lokalne zajednice u cijelini.\r\n                            </Text>\r\n                        </animated.div>\r\n                    ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default WelcomePage;\r\n","import { FontIcon } from '@fluentui/react';\r\nimport React from 'react';\r\n\r\nconst ScrollDownButton: React.FC<{\r\n    className?: string;\r\n    style?: any;\r\n    onClick?: any;\r\n}> = (props) => {\r\n    return (\r\n        <div\r\n            onClick={props.onClick ? props.onClick : () => {}}\r\n            className={props.className}>\r\n            <FontIcon style={props.style} iconName='ChevronDownMed' />\r\n        </div>\r\n    );\r\n};\r\nexport default ScrollDownButton;\r\n","import React from 'react';\r\nimport WelcomePage from '../components/Home/WelcomePage';\r\nimport { getTheme } from '@fluentui/react';\r\nimport ScrollDownButton from '../shared/ScrollDownButton';\r\nimport { useTheme } from '../utils/ThemeHook';\r\nimport { useViewport } from '../utils/useViewport';\r\n\r\nconst HomePage: React.FC<any> = () => {\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const viewport = useViewport();\r\n    return (\r\n        <section\r\n            className='home section'\r\n            style={{\r\n                backgroundImage:\r\n                    themeState === 'dark'\r\n                        ? 'url(https://i2.wp.com/volimdanilovgrad.me/wp-content/uploads/2018/03/ee1c09fd9ca271941dd04fead87e0e2b.jpeg?resize=1035%2C425&ssl=1)'\r\n                        : 'url(https://scontent-vie1-1.xx.fbcdn.net/v/t1.0-9/104469820_2638176146396714_609291864864041402_o.jpg?_nc_cat=107&ccb=2&_nc_sid=cdbe9c&_nc_ohc=J71lV_v4KV8AX9_Hgaa&_nc_oc=AQki3_Q_CaIbI5P4GRA93Xh9fim9MMUni262TrdEQfe74tuCNxybEOWC8hKibZpvKjY&_nc_ht=scontent-vie1-1.xx&oh=1fd2d42788d3139f2f3d4c1915b847d7&oe=60203680)',\r\n            }}>\r\n            <WelcomePage />\r\n            <div className='backdrop'></div>\r\n            <ScrollDownButton\r\n                style={{\r\n                    fontSize: viewport === 'desktop' ? 50 : 30,\r\n                    color:\r\n                        themeState === 'light'\r\n                            ? theme.palette.black\r\n                            : theme.palette.themeDark,\r\n                }}\r\n                className='chevrnon-scroll'\r\n            />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport { getTheme, loadTheme, initializeIcons } from '@fluentui/react';\nimport Header from './components/Header';\nimport { useTheme } from './utils/ThemeHook';\nimport { Router } from '@reach/router';\nimport HomePage from './routes/HomePage';\n\nfunction App() {\n    initializeIcons();\n\n    const { themeState } = useTheme();\n    if (themeState === 'dark') {\n        loadTheme({\n            palette: {\n                themePrimary: '#0078d4',\n                themeLighterAlt: '#eff6fc',\n                themeLighter: '#deecf9',\n                themeLight: '#c7e0f4',\n                themeTertiary: '#71afe5',\n                themeSecondary: '#2b88d8',\n                themeDarkAlt: '#106ebe',\n                themeDark: '#ffffff',\n                themeDarker: '#323130',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#c2c2c2',\n                neutralSecondary: '#858585',\n                neutralPrimaryAlt: '#4b4b4b',\n                neutralPrimary: '#333333',\n                neutralDark: '#272727',\n                black: '#323130',\n                white: '#e0e0e0',\n            },\n        });\n    } else {\n        loadTheme({\n            palette: {\n                themePrimary: '#0078d4',\n                themeLighterAlt: '#eff6fc',\n                themeLighter: '#deecf9',\n                themeLight: '#c7e0f4',\n                themeTertiary: '#71afe5',\n                themeSecondary: '#2b88d8',\n                themeDarkAlt: '#106ebe',\n                themeDark: '#005a9e',\n                themeDarker: '#005a9e',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#c2c2c2',\n                neutralSecondary: '#858585',\n                neutralPrimaryAlt: '#4b4b4b',\n                neutralPrimary: '#333333',\n                neutralDark: '#272727',\n                black: '#ffffff',\n                white: 'transparent',\n            },\n        });\n    }\n\n    const theme = getTheme();\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                height: '100%',\n                background: theme.palette.black,\n            }}>\n            <Header />\n            <div>\n                <Router>\n                    <HomePage path='/' />\n                </Router>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: window.innerWidth < 768 ? 'mobile' : 'desktop',\r\n    reducers: {\r\n        getViewport(state) {\r\n            return state;\r\n        },\r\n    },\r\n});\r\n\r\nexport default counterSlice.reducer;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport themeReducer from './Theme';\r\nimport viewportReducer from './Viewport';\r\n\r\nconst reducers = combineReducers({\r\n    theme: themeReducer,\r\n    viewport: viewportReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}