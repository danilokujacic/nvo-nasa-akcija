{"version":3,"sources":["redux/Theme.ts","utils/ThemeHook.ts","utils/useViewport.ts","shared/FluentButton.tsx","components/Header/DesktopNav.tsx","components/Header/MobileNav.tsx","components/Header.tsx","components/Home/WelcomePage.tsx","shared/ScrollDownButton.tsx","utils/useScrollTo.ts","components/Home/Calendar.tsx","components/Home/Activities.tsx","routes/HomePage.tsx","App.tsx","redux/Viewport.ts","redux/index.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","reducers","setTheme","state","payload","actions","useTheme","toggler","themeState","useSelector","theme","dispatch","useDispatch","console","log","$setTheme","useViewport","viewport","FluentButton","props","getTheme","CommandBarButton","styles","root","color","palette","themeDark","background","padding","boxSizing","borderBottom","label","fontSize","fontWeight","rootHovered","DesktopNav","style","height","alignItems","display","text","onClick","navigate","process","MobileNav","React","useState","isPanelOpen","setPanelOpen","IconButton","iconProps","iconName","selectors","themeDarker","backgroundColor","white","Panel","onDismiss","onOuterClick","onLightDismissClick","isLightDismiss","main","zIndex","black","headerText","content","contentInner","marginTop","overlay","opacity","position","isOpen","Nav","ariaLabel","onLinkClick","e","item","preventDefault","url","linkText","chevronIcon","link","isSelected","undefined","border","borderLeft","compositeLink","groups","links","expandAriaLabel","collapseAriaLabel","target","Header","className","justifyContent","marginLeft","title","disabled","WelcomePage","animation","setAnimation","ref","useRef","intersection","useIntersection","rootMargin","threshold","useEffect","ratio","intersectionRatio","transitions","useTransition","from","left","top","enter","leave","secondtransitions","width","map","key","div","Text","userSelect","variant","ScrollDownButton","FontIcon","useScrollTo","elementRef","useCallback","elementData","HTMLElement","getBoundingClientRect","current","window","scrollTo","y","behavior","dayPickerStrings","months","shortMonths","days","shortDays","goToToday","weekNumberFormatString","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","closeButtonAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","divStyle","buttonStyle","margin","CalendarFluent","selectedDateRange","setSelectedDateRange","selectedDate","setSelectedDate","rangeStart","rangeEnd","length","toLocaleDateString","minDate","maxDate","restrictedDates","d","join","Calendar","onSelectDate","date","dateRangeArray","isMonthPickerVisible","dateRangeType","autoNavigateOnSelection","showGoToToday","value","firstDayOfWeek","DayOfWeek","Sunday","strings","highlightCurrentMonth","highlightSelectedMonth","isDayPickerVisible","showMonthPickerAsOverlay","showWeekNumbers","showSixWeeksByDefault","workWeekDays","showNavigateButtons","DefaultButton","goPreviousSelectedDate","Date","getDateRangeArray","subtractFrom","daysToSubtract","DateRangeType","Month","getFullYear","getMonth","addDays","goNextSelectedDate","pop","items","Activities","trans","setItems","Boolean","marginRight","HomePage","expRef","setExpRef","backgroundImage","App","initializeIcons","loadTheme","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","path","innerWidth","getViewport","combineReducers","themeReducer","viewportReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2785040b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: 'light',\r\n    reducers: {\r\n        setTheme(state, { payload }) {\r\n            state = payload;\r\n            return state;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setTheme } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n","import { setTheme as $setTheme } from '../redux/Theme';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useTheme = (toggler?: any) => {\r\n    const themeState = useSelector((state: any) => state.theme);\r\n    const dispatch = useDispatch();\r\n    const setTheme = (theme?: string) => {\r\n        if (toggler) {\r\n            console.log(themeState);\r\n            if (themeState === 'dark') {\r\n                dispatch($setTheme('light'));\r\n            } else {\r\n                dispatch($setTheme('dark'));\r\n            }\r\n            return;\r\n        }\r\n        dispatch($setTheme(theme));\r\n    };\r\n\r\n    return { setTheme, themeState };\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport const useViewport = () => {\r\n    const vpState = useSelector((state: any) => state.viewport);\r\n    return vpState;\r\n};\r\n","import React from 'react';\r\n\r\nimport { CommandBarButton, getTheme, IButtonProps } from '@fluentui/react';\r\n\r\nconst FluentButton: React.FC<IButtonProps> = (props) => {\r\n    const theme = getTheme();\r\n\r\n    return (\r\n        <CommandBarButton\r\n            {...props}\r\n            styles={{\r\n                root: {\r\n                    color: theme.palette.themeDark,\r\n                    background: 'transparent',\r\n                    padding: '8px 16px',\r\n                    boxSizing: 'border-box',\r\n                    borderBottom: '2px solid transparent',\r\n                },\r\n                label: {\r\n                    fontSize: '16px',\r\n                    fontWeight: 600,\r\n                },\r\n                rootHovered: {\r\n                    color: theme.palette.themeDark,\r\n                    background: 'transparent',\r\n                    borderBottom: '2px solid ' + theme.palette.themeDark,\r\n                },\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default FluentButton;\r\n","import React from 'react';\r\nimport FluentButton from '../../shared/FluentButton';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst DesktopNav = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100%',\r\n\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n            }}>\r\n            <FluentButton\r\n                text='Home'\r\n                onClick={() =>\r\n                    process.env.NODE_ENV !== 'development'\r\n                        ? navigate(process.env.PUBLIC_URL + '/')\r\n                        : navigate('/')\r\n                }\r\n            />\r\n            <FluentButton\r\n                text='About us'\r\n                onClick={() =>\r\n                    process.env.NODE_ENV !== 'development'\r\n                        ? navigate(process.env.PUBLIC_URL + '/about')\r\n                        : navigate('/about')\r\n                }\r\n            />\r\n            <FluentButton\r\n                text='Contact'\r\n                onClick={() =>\r\n                    process.env.NODE_ENV !== 'development'\r\n                        ? navigate(process.env.PUBLIC_URL + '/contact')\r\n                        : navigate('/contact')\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DesktopNav;\r\n","import {\r\n    getTheme,\r\n    IconButton,\r\n    Panel,\r\n    Nav,\r\n    INavLinkGroup,\r\n} from '@fluentui/react';\r\nimport { navigate } from '@reach/router';\r\nimport React from 'react';\r\nimport { useTheme } from '../../utils/ThemeHook';\r\n\r\nconst MobileNav = () => {\r\n    const [isPanelOpen, setPanelOpen] = React.useState(false);\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const navLinkGroups: INavLinkGroup[] = [\r\n        {\r\n            links: [\r\n                {\r\n                    name: 'Home',\r\n                    url: '/',\r\n                },\r\n                {\r\n                    name: 'About us',\r\n                    url: '/about',\r\n                    expandAriaLabel: 'Expand About us',\r\n                    collapseAriaLabel: 'Collapse About us',\r\n                    links: [\r\n                        {\r\n                            name: 'Child link 4',\r\n                            url: 'http://example.com',\r\n                            target: '_blank',\r\n                        },\r\n                    ],\r\n                },\r\n\r\n                {\r\n                    name: 'Contact',\r\n                    url: '/contact',\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100%',\r\n\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n            }}>\r\n            <IconButton\r\n                iconProps={{\r\n                    iconName: 'GlobalNavButton',\r\n                    style: { fontSize: 20, color: theme.palette.themeDark },\r\n                }}\r\n                onClick={() => setPanelOpen(true)}\r\n                styles={{\r\n                    root: {\r\n                        selectors: {\r\n                            ':hover .ms-Button-icon': {\r\n                                color: `${theme.palette.themeDarker} !important`,\r\n                            },\r\n                        },\r\n                    },\r\n                    rootHovered: {\r\n                        backgroundColor: theme.palette.white,\r\n                    },\r\n                }}\r\n            />\r\n            <Panel\r\n                onDismiss={() => setPanelOpen(false)}\r\n                onOuterClick={() => setPanelOpen(false)}\r\n                onLightDismissClick={() => setPanelOpen(false)}\r\n                isLightDismiss={true}\r\n                styles={{\r\n                    main: {\r\n                        zIndex: 999,\r\n                        background: theme.palette.black,\r\n                    },\r\n                    headerText: {\r\n                        color: theme.palette.themeDark,\r\n                    },\r\n                    content: {\r\n                        color: theme.palette.themeDark,\r\n                    },\r\n                    contentInner: {\r\n                        marginTop: '24px',\r\n                    },\r\n                    overlay: {\r\n                        background: theme.palette.black,\r\n                        opacity: 0.6,\r\n                        zIndex: 5,\r\n                        position: 'absolute',\r\n                    },\r\n                }}\r\n                headerText='Navigation'\r\n                isOpen={isPanelOpen}>\r\n                <Nav\r\n                    ariaLabel='Navigation'\r\n                    onLinkClick={(e: any, item: any) => {\r\n                        e.preventDefault();\r\n                        navigate(item.url);\r\n                        setPanelOpen(false);\r\n                    }}\r\n                    styles={(props: any) => ({\r\n                        linkText: { zIndex: 1, color: theme.palette.themeDark },\r\n\r\n                        chevronIcon: {\r\n                            zIndex: 1,\r\n                            color: theme.palette.themeDark,\r\n                        },\r\n                        link: {\r\n                            background:\r\n                                themeState === 'dark' && props.isSelected\r\n                                    ? theme.palette.black\r\n                                    : undefined,\r\n                            border: 'none',\r\n                            ':after': {\r\n                                borderLeft:\r\n                                    '2px solid ' + theme.palette.themeDark,\r\n                            },\r\n                        },\r\n                        compositeLink: {\r\n                            border: 'none',\r\n                            ':hover .ms-Nav-linkText': {\r\n                                color: theme.palette.themeDarker,\r\n                            },\r\n                            ':hover .ms-Nav-chevron': {\r\n                                zIndex: 1,\r\n                                color:\r\n                                    theme.palette.themeDarker + ' !important',\r\n                            },\r\n                        },\r\n                    })}\r\n                    groups={navLinkGroups}\r\n                />\r\n            </Panel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileNav;\r\n","import { getTheme, IconButton } from '@fluentui/react';\r\nimport React from 'react';\r\nimport { useTheme } from '../utils/ThemeHook';\r\nimport { useViewport } from '../utils/useViewport';\r\nimport DesktopNav from './Header/DesktopNav';\r\nimport MobileNav from './Header/MobileNav';\r\n\r\nconst Header: React.FC<any> = () => {\r\n    const theme = getTheme();\r\n    const { setTheme, themeState } = useTheme(true);\r\n    const viewport = useViewport();\r\n\r\n    return (\r\n        <div\r\n            className='header'\r\n            style={{\r\n                height: '52px',\r\n                padding: '0px 24px',\r\n                background: theme.palette.black,\r\n                borderBottom: `1px solid ${theme.palette.themeDark}`,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n            }}>\r\n            {viewport === 'desktop' ? <DesktopNav /> : <MobileNav />}\r\n            <div\r\n                style={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <IconButton\r\n                    iconProps={{\r\n                        iconName:\r\n                            themeState === 'light' ? 'ClearNight' : 'Sunny',\r\n                        style: {\r\n                            color: theme.palette.themeDark,\r\n                            fontSize: '20px',\r\n                            marginTop:\r\n                                themeState === 'dark' ? '2px' : undefined,\r\n                            marginLeft:\r\n                                themeState === 'dark' ? '6px' : undefined,\r\n                        },\r\n                    }}\r\n                    styles={{\r\n                        root: {\r\n                            selectors: {\r\n                                ':hover .ms-Button-icon': {\r\n                                    color: `${theme.palette.themeDarker} !important`,\r\n                                },\r\n                            },\r\n                        },\r\n                        rootHovered: {\r\n                            backgroundColor: theme.palette.white,\r\n                        },\r\n                    }}\r\n                    title='ClearNight'\r\n                    onClick={() => setTheme()}\r\n                    ariaLabel='ClearNight'\r\n                    disabled={false}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { getTheme, Text } from '@fluentui/react';\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { useTheme } from '../../utils/ThemeHook';\r\nimport { useViewport } from '../../utils/useViewport';\r\nimport { useIntersection } from 'react-use';\r\n\r\nconst WelcomePage: React.FC<{}> = () => {\r\n    const [animation, setAnimation] = React.useState(true);\r\n\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const viewport = useViewport();\r\n    const ref = React.useRef(null);\r\n    const intersection = useIntersection(ref, {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: viewport === 'desktop' ? 0.9 : 0.7,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!intersection) return;\r\n        const ratio = viewport === 'desktop' ? 0.9 : 0.7;\r\n        intersection.intersectionRatio < ratio\r\n            ? setAnimation(false)\r\n            : setAnimation(true);\r\n        //eslint-disable-next-line\r\n    }, [intersection]);\r\n\r\n    const transitions = useTransition(animation, null, {\r\n        from: {\r\n            position: 'absolute',\r\n            left: viewport === 'desktop' ? '20%' : '10%',\r\n            opacity: 0,\r\n            top: viewport === 'desktop' ? '25%' : '15%',\r\n        },\r\n        enter: {\r\n            left: viewport === 'desktop' ? '20%' : '10%',\r\n            top: viewport === 'desktop' ? '30%' : '20%',\r\n            opacity: 1,\r\n        },\r\n        leave: {\r\n            top: viewport === 'desktop' ? '20%' : '5%',\r\n            opacity: 0,\r\n        },\r\n    });\r\n    const secondtransitions = useTransition(animation, null, {\r\n        from: {\r\n            position: 'absolute',\r\n            left: viewport === 'desktop' ? '50%' : '10%',\r\n            opacity: 0,\r\n            top: viewport === 'desktop' ? '45%' : '25%',\r\n        },\r\n        enter: {\r\n            left: viewport === 'desktop' ? '50%' : '10%',\r\n            top: viewport === 'desktop' ? '50%' : '30%',\r\n            opacity: 1,\r\n        },\r\n        leave: {\r\n            top: viewport === 'desktop' ? '40%' : '15%',\r\n            opacity: 0,\r\n        },\r\n    });\r\n    return (\r\n        <div\r\n            style={{ position: 'absolute', width: '100%', height: '100%' }}\r\n            ref={ref}>\r\n            {transitions.map(\r\n                ({ item, props, key }) =>\r\n                    item && (\r\n                        <animated.div\r\n                            key={key}\r\n                            style={props}\r\n                            className='welcome-text'>\r\n                            <Text\r\n                                styles={{\r\n                                    root: {\r\n                                        color:\r\n                                            themeState === 'light'\r\n                                                ? theme.palette.black\r\n                                                : theme.palette.themeDark,\r\n                                        userSelect: 'none',\r\n                                    },\r\n                                }}\r\n                                variant={\r\n                                    viewport === 'desktop' ? 'mega' : 'xxLarge'\r\n                                }>\r\n                                NVO „Nasa akcija“\r\n                            </Text>\r\n                        </animated.div>\r\n                    ),\r\n            )}\r\n            {secondtransitions.map(\r\n                ({ item, props, key }) =>\r\n                    item && (\r\n                        <animated.div\r\n                            key={key}\r\n                            style={props}\r\n                            className='welcome-text-description'>\r\n                            <Text\r\n                                styles={{\r\n                                    root: {\r\n                                        color:\r\n                                            themeState === 'light'\r\n                                                ? theme.palette.black\r\n                                                : theme.palette.themeDark,\r\n                                        userSelect: 'none',\r\n                                    },\r\n                                }}\r\n                                variant='large'>\r\n                                Osnovana 2012 godine kao nevladino udruzenje\r\n                                ciji je opsti cilj razvoj svijesti gradjana kao\r\n                                i njihovo ukljucivanje u socijalni, ekonomski,\r\n                                ekoloski i kulturni razvoj drustva, kvaliteta\r\n                                zivota gradjana i lokalne zajednice u cijelini.\r\n                            </Text>\r\n                        </animated.div>\r\n                    ),\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default WelcomePage;\r\n","import { FontIcon } from '@fluentui/react';\r\nimport React from 'react';\r\n\r\nconst ScrollDownButton: React.FC<{\r\n    className?: string;\r\n    style?: any;\r\n    onClick?: any;\r\n}> = (props) => {\r\n    return (\r\n        <div\r\n            onClick={props.onClick ? props.onClick : () => {}}\r\n            className={props.className}>\r\n            <FontIcon style={props.style} iconName='ChevronDownMed' />\r\n        </div>\r\n    );\r\n};\r\nexport default ScrollDownButton;\r\n","import { useCallback, RefObject } from 'react';\r\n\r\nconst isHTML = (\r\n    element: HTMLElement | RefObject<HTMLElement>,\r\n): element is HTMLElement => {\r\n    return element instanceof HTMLElement;\r\n};\r\nexport const useScrollTo = (\r\n    elementRef: HTMLElement | RefObject<HTMLElement>,\r\n) => {\r\n    const scrollToEl = useCallback(() => {\r\n        if (!elementRef) return;\r\n        let elementData;\r\n        if (isHTML(elementRef)) {\r\n            elementData = elementRef.getBoundingClientRect();\r\n        } else {\r\n            elementData = elementRef.current?.getBoundingClientRect();\r\n        }\r\n\r\n        window.scrollTo({\r\n            top: elementData?.y as number,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }, [elementRef]);\r\n\r\n    return scrollToEl;\r\n};\r\n","import * as React from 'react';\r\nimport {\r\n    Calendar,\r\n    DayOfWeek,\r\n    DateRangeType,\r\n} from 'office-ui-fabric-react/lib/Calendar';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { addDays, getDateRangeArray } from '@fluentui/date-time-utilities';\r\n\r\nexport interface ICalendarInlineExampleProps {\r\n    isMonthPickerVisible?: boolean;\r\n    dateRangeType: DateRangeType;\r\n    autoNavigateOnSelection: boolean;\r\n    showGoToToday: boolean;\r\n    showNavigateButtons?: boolean;\r\n    highlightCurrentMonth?: boolean;\r\n    highlightSelectedMonth?: boolean;\r\n    isDayPickerVisible?: boolean;\r\n    showMonthPickerAsOverlay?: boolean;\r\n    showWeekNumbers?: boolean;\r\n    minDate?: Date;\r\n    maxDate?: Date;\r\n    restrictedDates?: Date[];\r\n    showSixWeeksByDefault?: boolean;\r\n    workWeekDays?: DayOfWeek[];\r\n    firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nconst dayPickerStrings = {\r\n    months: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n    ],\r\n    shortMonths: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n    ],\r\n    days: [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday',\r\n    ],\r\n    shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n    goToToday: 'Go to today',\r\n    weekNumberFormatString: 'Week number {0}',\r\n    prevMonthAriaLabel: 'Previous month',\r\n    nextMonthAriaLabel: 'Next month',\r\n    prevYearAriaLabel: 'Previous year',\r\n    nextYearAriaLabel: 'Next year',\r\n    prevYearRangeAriaLabel: 'Previous year range',\r\n    nextYearRangeAriaLabel: 'Next year range',\r\n    closeButtonAriaLabel: 'Close',\r\n    monthPickerHeaderAriaLabel: '{0}, select to change the year',\r\n    yearPickerHeaderAriaLabel: '{0}, select to change the month',\r\n};\r\nconst divStyle: React.CSSProperties = {\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n};\r\nconst buttonStyle: React.CSSProperties = {\r\n    margin: '17px 10px 0 0',\r\n};\r\nlet dateRangeString: string | null = null;\r\n\r\nconst CalendarFluent: React.FunctionComponent<ICalendarInlineExampleProps> = (\r\n    props: ICalendarInlineExampleProps,\r\n) => {\r\n    const [selectedDateRange, setSelectedDateRange] = React.useState<Date[]>();\r\n    const [selectedDate, setSelectedDate] = React.useState<Date>();\r\n\r\n    const onSelectDate = (date: any, dateRangeArray: any): void => {\r\n        setSelectedDate(date);\r\n        setSelectedDateRange(dateRangeArray);\r\n    };\r\n\r\n    const goPrevious = () => {\r\n        const goPreviousSelectedDate = selectedDate || new Date();\r\n        const dateRangeArray = getDateRangeArray(\r\n            goPreviousSelectedDate,\r\n            props.dateRangeType,\r\n            DayOfWeek.Sunday,\r\n        );\r\n        let subtractFrom = dateRangeArray[0];\r\n        let daysToSubtract = dateRangeArray.length;\r\n        if (props.dateRangeType === DateRangeType.Month) {\r\n            subtractFrom = new Date(\r\n                subtractFrom.getFullYear(),\r\n                subtractFrom.getMonth(),\r\n                1,\r\n            );\r\n            daysToSubtract = 1;\r\n        }\r\n        const newSelectedDate = addDays(subtractFrom, -daysToSubtract);\r\n        return {\r\n            goPreviousSelectedDate: newSelectedDate,\r\n        };\r\n    };\r\n\r\n    const goNext = () => {\r\n        const goNextSelectedDate = selectedDate || new Date();\r\n        const dateRangeArray = getDateRangeArray(\r\n            goNextSelectedDate,\r\n            props.dateRangeType,\r\n            DayOfWeek.Sunday,\r\n        );\r\n        const newSelectedDate = addDays(dateRangeArray.pop()!, 1);\r\n\r\n        return {\r\n            goNextSelectedDate: newSelectedDate,\r\n        };\r\n    };\r\n\r\n    const onDismiss = () => {\r\n        return selectedDate;\r\n    };\r\n\r\n    if (selectedDateRange) {\r\n        const rangeStart = selectedDateRange[0];\r\n        const rangeEnd = selectedDateRange[selectedDateRange.length - 1];\r\n        dateRangeString =\r\n            rangeStart.toLocaleDateString() +\r\n            '-' +\r\n            rangeEnd.toLocaleDateString();\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            {(props.minDate || props.maxDate) && (\r\n                <div>\r\n                    Date boundary:\r\n                    <span>\r\n                        {' '}\r\n                        {props.minDate\r\n                            ? props.minDate.toLocaleDateString()\r\n                            : 'Not set'}\r\n                        -\r\n                        {props.maxDate\r\n                            ? props.maxDate.toLocaleDateString()\r\n                            : 'Not set'}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {props.restrictedDates && (\r\n                <div>\r\n                    Disabled date(s):\r\n                    <span>\r\n                        {' '}\r\n                        {props.restrictedDates.length > 0\r\n                            ? props.restrictedDates\r\n                                  .map((d) => d.toLocaleDateString())\r\n                                  .join(', ')\r\n                            : 'Not set'}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            <Calendar\r\n                onSelectDate={onSelectDate}\r\n                onDismiss={onDismiss}\r\n                isMonthPickerVisible={props.isMonthPickerVisible}\r\n                dateRangeType={props.dateRangeType}\r\n                autoNavigateOnSelection={props.autoNavigateOnSelection}\r\n                showGoToToday={props.showGoToToday}\r\n                value={selectedDate!}\r\n                firstDayOfWeek={\r\n                    props.firstDayOfWeek\r\n                        ? props.firstDayOfWeek\r\n                        : DayOfWeek.Sunday\r\n                }\r\n                strings={dayPickerStrings}\r\n                highlightCurrentMonth={props.highlightCurrentMonth}\r\n                highlightSelectedMonth={props.highlightSelectedMonth}\r\n                isDayPickerVisible={props.isDayPickerVisible}\r\n                showMonthPickerAsOverlay={props.showMonthPickerAsOverlay}\r\n                showWeekNumbers={props.showWeekNumbers}\r\n                minDate={props.minDate}\r\n                maxDate={props.maxDate}\r\n                restrictedDates={props.restrictedDates}\r\n                showSixWeeksByDefault={props.showSixWeeksByDefault}\r\n                workWeekDays={props.workWeekDays}\r\n            />\r\n            {props.showNavigateButtons && (\r\n                <div>\r\n                    <DefaultButton\r\n                        style={buttonStyle}\r\n                        // eslint-disable-next-line react/jsx-no-bind\r\n                        onClick={goPrevious}\r\n                        text='Previous'\r\n                    />\r\n                    <DefaultButton\r\n                        style={buttonStyle}\r\n                        // eslint-disable-next-line react/jsx-no-bind\r\n                        onClick={goNext}\r\n                        text='Next'\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default CalendarFluent;\r\n","import React from 'react';\r\nimport { useTheme } from '../../utils/ThemeHook';\r\nimport { getTheme, Text } from '@fluentui/react';\r\nimport { useViewport } from '../../utils/useViewport';\r\nimport 'tailwindcss/tailwind.css';\r\nimport { FontIcon } from '@fluentui/react';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport { useIntersection } from 'react-use';\r\nimport CalendarFluent from './Calendar';\r\n\r\nconst items = [\r\n    'Osmišljavanje, organizovanje, koordiniranje radnih,humanitarnih i drugih akcija zajedno sa lokalnim    upravama i građanima u lokalnim zajednicama, drugim  organizacijama i biznisima',\r\n\r\n    'Povezivanje i umrežavanje NVO u cilju sprovođenja  zajedničkih projekata od značaja za zajednicu i šire.',\r\n\r\n    ' Uključivanje sto veceg broja građana svih uzrasta i opredeljenja u sprovođenje radnih akcija.',\r\n\r\n    'Razvijanje ljudskih resursa kroz akcije, komunikaciju, zajednički rad i ostvarivanje ciljeva u lokalnim zajednicama.',\r\n\r\n    'Edukacija građana o ekonomsko-socijalnim problemima i načinima njihovog prevazilaženja, razvoju ruralnih oblasti, ekologiji i potrebi očuvanja kulturnih dobara.',\r\n\r\n    'Organizovanje radionica, seminara i sličnih edukativnih događaja sa ciljem unapređenja razvojasvijesti o značaju i potrebi građanskog aktivizma, kao i mijenjanju paradigma i stigma zajednice.',\r\n\r\n    ' Publikovanje štampanog i elektronskog materijala u cilju ostvarivanja vizije i misije organizacije.',\r\n\r\n    'Unapredjenje polozaja omladine, rad sa mladima, neformalna edukacija, unapredjenje omladinske politike, kao i fokus na njihovom individualnom razvoju.',\r\n\r\n    'Podsticanje mobilnosti mladih, njihovo ucesce u zajednici kroz volonterizam, umrezavanje, prijavljivanje na obuke i neformalne vrste edukacije.',\r\n\r\n    'Pružanje strucnih i savjetodavnih usluga, vodjstvenih, resursnih i drugih usluga predstavnicima drugih nevladinih organizacija, javnog sektora i ekonomskih subjekata za jacanje njihovih projekata i djelatnosti.',\r\n\r\n    'Jacanje svijesti zajednice o njihovom uticaju, ulozi i odgovornosti u razvoju vrijednosti civilnog drustva, odrzivom razvoju zivotne sredine i ocuvanje kulturne i prirodne bastine.',\r\n\r\n    'Podsticanje ekonomskog razvoja zemlje, sa akcentom na odrzivi razvoj konkretnih lokalnih zajednica uzimajuci u obzir specificnost lokalnog potencijala',\r\n\r\n    'Razvoj ljudskih resursa kroz povezivanje i usmjeravanjepostojecih kadrovskih potencijala, i ukljucivanje marginalizovanih slojeva drustva',\r\n];\r\n\r\nconst Activities: React.FC<{}> = () => {\r\n    const viewport = useViewport();\r\n    const { themeState } = useTheme();\r\n\r\n    const [trans, setItems] = React.useState<any>(true);\r\n\r\n    const ref = React.useRef(null);\r\n\r\n    const intersection = useIntersection(ref, {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 0.7,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!intersection) return;\r\n        if (intersection.intersectionRatio < 0.7) {\r\n            console.log('njanja');\r\n            setItems(false);\r\n        } else {\r\n            console.log('afaffa');\r\n            setItems(true);\r\n        }\r\n    }, [intersection]);\r\n\r\n    const transitions = useTransition(trans ? items : null, null, {\r\n        from: {\r\n            left: -10,\r\n            opacity: 0,\r\n        },\r\n        enter: {\r\n            opacity: 1,\r\n            left: 0,\r\n        },\r\n        leave: {\r\n            left: -10,\r\n            opacity: 0,\r\n        },\r\n    });\r\n    const theme = getTheme();\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className='activities-container'\r\n            style={{\r\n                position: 'absolute',\r\n                width: '100%',\r\n\r\n                padding: ' 32px 40px',\r\n                boxSizing: 'border-box',\r\n            }}>\r\n            <div className='activities-header'>\r\n                <Text\r\n                    variant='xxLarge'\r\n                    styles={{\r\n                        root: {\r\n                            color: theme.palette.themeDark,\r\n                        },\r\n                    }}>\r\n                    Activities\r\n                </Text>\r\n            </div>\r\n            <div className='activities-list'>\r\n                {transitions.map(\r\n                    ({ item, props, key }) =>\r\n                        Boolean(item) && (\r\n                            <animated.div\r\n                                key={key}\r\n                                className='activities-item'\r\n                                style={props}>\r\n                                {viewport === 'desktop' && (\r\n                                    <FontIcon\r\n                                        style={{\r\n                                            marginRight: 2,\r\n                                            fontSize: '16px',\r\n                                            color:\r\n                                                themeState === 'dark'\r\n                                                    ? theme.palette.white\r\n                                                    : theme.palette.themeDarker,\r\n                                        }}\r\n                                        iconName='SliderThumb'\r\n                                    />\r\n                                )}\r\n                                <Text\r\n                                    styles={{\r\n                                        root: {\r\n                                            fontWeight: 600,\r\n                                            color: theme.palette.themeDark,\r\n                                        },\r\n                                    }}\r\n                                    variant='mediumPlus'>\r\n                                    {item}\r\n                                </Text>\r\n                            </animated.div>\r\n                        ),\r\n                )}\r\n            </div>\r\n            <div className='activities-calendar'>\r\n                <CalendarFluent\r\n                    dateRangeType={0}\r\n                    autoNavigateOnSelection={false}\r\n                    showGoToToday={true}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activities;\r\n","import React from 'react';\r\nimport WelcomePage from '../components/Home/WelcomePage';\r\nimport { getTheme } from '@fluentui/react';\r\nimport ScrollDownButton from '../shared/ScrollDownButton';\r\nimport { useTheme } from '../utils/ThemeHook';\r\nimport { useViewport } from '../utils/useViewport';\r\nimport { useScrollTo } from '../utils/useScrollTo';\r\nimport Activities from '../components/Home/Activities';\r\n\r\nconst HomePage: React.FC<any> = () => {\r\n    const theme = getTheme();\r\n    const { themeState } = useTheme();\r\n    const viewport = useViewport();\r\n    const [expRef, setExpRef] = React.useState<any>(null);\r\n\r\n    const scrollTo = useScrollTo(expRef);\r\n\r\n    return (\r\n        <>\r\n            <section\r\n                className='home section'\r\n                style={{\r\n                    backgroundImage:\r\n                        themeState === 'dark'\r\n                            ? 'url(https://i2.wp.com/volimdanilovgrad.me/wp-content/uploads/2018/03/ee1c09fd9ca271941dd04fead87e0e2b.jpeg?resize=1035%2C425&ssl=1)'\r\n                            : 'url(https://scontent-vie1-1.xx.fbcdn.net/v/t1.0-9/104469820_2638176146396714_609291864864041402_o.jpg?_nc_cat=107&ccb=2&_nc_sid=cdbe9c&_nc_ohc=J71lV_v4KV8AX9_Hgaa&_nc_oc=AQki3_Q_CaIbI5P4GRA93Xh9fim9MMUni262TrdEQfe74tuCNxybEOWC8hKibZpvKjY&_nc_ht=scontent-vie1-1.xx&oh=1fd2d42788d3139f2f3d4c1915b847d7&oe=60203680)',\r\n                }}>\r\n                <WelcomePage />\r\n                <div className='backdrop'></div>\r\n                <ScrollDownButton\r\n                    style={{\r\n                        fontSize: viewport === 'desktop' ? 50 : 30,\r\n                        color:\r\n                            themeState === 'light'\r\n                                ? theme.palette.black\r\n                                : theme.palette.themeDark,\r\n                    }}\r\n                    onClick={() => scrollTo()}\r\n                    className='chevrnon-scroll'\r\n                />\r\n            </section>\r\n            <section ref={setExpRef} className='experience section'>\r\n                <Activities />\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport { getTheme, loadTheme, initializeIcons } from '@fluentui/react';\nimport Header from './components/Header';\nimport { useTheme } from './utils/ThemeHook';\nimport { Router } from '@reach/router';\nimport HomePage from './routes/HomePage';\nimport 'tailwindcss/tailwind.css';\n\nfunction App() {\n    initializeIcons();\n\n    const { themeState } = useTheme();\n    if (themeState === 'dark') {\n        loadTheme({\n            palette: {\n                themePrimary: '#0078d4',\n                themeLighterAlt: '#eff6fc',\n                themeLighter: '#deecf9',\n                themeLight: '#c7e0f4',\n                themeTertiary: '#71afe5',\n                themeSecondary: '#2b88d8',\n                themeDarkAlt: '#106ebe',\n                themeDark: '#ffffff',\n                themeDarker: '#323130',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#c2c2c2',\n                neutralSecondary: '#858585',\n                neutralPrimaryAlt: '#4b4b4b',\n                neutralPrimary: '#333333',\n                neutralDark: '#272727',\n                black: '#323130',\n                white: '#e0e0e0',\n            },\n        });\n    } else {\n        loadTheme({\n            palette: {\n                themePrimary: '#0078d4',\n                themeLighterAlt: '#eff6fc',\n                themeLighter: '#deecf9',\n                themeLight: '#c7e0f4',\n                themeTertiary: '#71afe5',\n                themeSecondary: '#2b88d8',\n                themeDarkAlt: '#106ebe',\n                themeDark: '#005a9e',\n                themeDarker: '#005a9e',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#c2c2c2',\n                neutralSecondary: '#858585',\n                neutralPrimaryAlt: '#4b4b4b',\n                neutralPrimary: '#333333',\n                neutralDark: '#272727',\n                black: '#ffffff',\n                white: 'transparent',\n            },\n        });\n    }\n\n    const theme = getTheme();\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                height: '100%',\n                background: theme.palette.black,\n            }}>\n            <Header />\n            <div>\n                <Router>\n                    <HomePage\n                        path={\n                            process.env.NODE_ENV !== 'development'\n                                ? process.env.PUBLIC_URL + '/'\n                                : '/'\n                        }\n                    />\n                </Router>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: window.innerWidth < 768 ? 'mobile' : 'desktop',\r\n    reducers: {\r\n        getViewport(state) {\r\n            return state;\r\n        },\r\n    },\r\n});\r\n\r\nexport default counterSlice.reducer;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport themeReducer from './Theme';\r\nimport viewportReducer from './Viewport';\r\n\r\nconst reducers = combineReducers({\r\n    theme: themeReducer,\r\n    viewport: viewportReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}